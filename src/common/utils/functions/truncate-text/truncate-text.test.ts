// Generated by CodiumAI

import { formatISODate } from '../date-converter/date-converter';

describe('formatISODate', () => {

    // Tests that the function returns a formatted date string for a valid ISO date input
    it('should return a formatted date string for a valid ISO date input', () => {
        const isoDate = '2022-01-01T12:00:00Z';
        const result = formatISODate(isoDate);
        expect(result).toBe('01 January 2022, 12:00:00');
    });

    // Tests that the function handles different valid date formats with time zone correctly
    it('should handle different valid date formats with time zone correctly', () => {
        const isoDate = '2022-01-01T12:00:00+02:00';
        const result = formatISODate(isoDate);
        expect(result).toBe('01 January 2022, 10:00:00');
    });

    // Tests that the function returns an error message for an invalid ISO date input
    it('should return an error message for an invalid ISO date input', () => {
        const isoDate = '2022-13-01T12:00:00Z';
        const result = formatISODate(isoDate);
        expect(result).toBe('This date is wrong!');
    });

    // Tests that the function handles leap years correctly
    it('should handle leap years correctly', () => {
        const isoDate = '2020-02-29T12:00:00Z';
        const result = formatISODate(isoDate);
        expect(result).toBe('29 February 2020, 12:00:00');
    });

    // Tests that the function handles daylight saving time correctly
    it('should handle daylight saving time correctly', () => {
        const isoDate = '2022-03-27T02:30:00+01:00';
        const result = formatISODate(isoDate);
        expect(result).toBe('27 March 2022, 01:30:00');
    });

    // Tests that the function supports custom formatting options
    it('should support custom formatting options', () => {
        const isoDate = '2022-01-01T12:00:00Z';
        const result = formatISODate(isoDate);
        expect(result).toBe('01 January 2022, 12:00:00');
    });

});
